#Check Default subscription
az account list --query "[].{Name:name,Default:isDefault}" -o table
# Set Default subscription prompt it
az account set --subscription "Your Subscription Name"


#Paramters
rg=lab-azsubnet-ext
location=southcentralus
sharekey=abc123
username=azureuser
password=Msft123Msft123

az group create --name $rg --location $location
az deployment group create --name Hub1-$location --resource-group $rg \
--template-uri https://raw.githubusercontent.com/dmauser/azure-hub-spoke-base-lab/main/azuredeploy.json \
--parameters https://raw.githubusercontent.com/dmauser/azure-subnet-ext/main/parameters1.json \
--no-wait

# Only continue when deployment is completed
while [ "$(az deployment group show --resource-group $rg --name Hub1-$location --query properties.provisioningState -o tsv)" != "Succeeded" ]; do echo "Waiting for deployment to complete"; sleep 10; done

# List VPN connections
az network vpn-connection list --resource-group $rg --query "[].{Name:name,Ip:ipConfigurations[0].privateIpAddress}" -o table
# List and remove all VPN connections
vpnconn=$(az network vpn-connection list --resource-group $rg --query "[].name" -o tsv)
for i in $vpnconn; do az network vpn-connection delete --name $i --resource-group $rg; done

# Create Local Network Gateway for OnPrem
az network local-gateway create --resource-group $rg --name onprem-lngw \
--gateway-ip-address $(az network public-ip show --resource-group $rg --name OnPrem-vpngw-pip1 --query "ipAddress" -o tsv) \
--local-address-prefixes 192.168.100.0/24 \
--output none

# Create Local Network Gateway for Azure 
az network local-gateway create --resource-group $rg --name azure-lngw \
--gateway-ip-address $(az network public-ip show --resource-group $rg --name Az-Hub1-vpngw-pip1 --query "ipAddress" -o tsv) \
--local-address-prefixes 10.0.0.0/24 10.0.1.0/24 10.0.2.0/24 \
--output none

# Built VPN connection from OnPrem to Azure
az network vpn-connection create --name OnPrem-to-Az-Hub1 --resource-group $rg \
--vnet-gateway1 OnPrem-vpngw --local-gateway2 azure-lngw \
--shared-key $sharekey --output none

# Built VPN connection from Azure to OnPrem
az network vpn-connection create --name Az-Hub1-to-OnPrem --resource-group $rg \
--vnet-gateway1 Az-Hub1-vpngw --local-gateway2 onprem-lngw \
--shared-key $sharekey --output none

# Get Azure VNETs information from RG
az network vnet list --resource-group $rg --query "[].{Name:name,AddressSpace:addressSpace.addressPrefixes[0]}" -o table

# Subnet Extention
# Add 172.16.0.0/24 a new VNET address space to exisiting OnPrem-vnet and Az-spk1-vnet
az network vnet update --resource-group $rg --name OnPrem-vnet --address-prefixes 192.168.100.0/24 172.16.0.0/24 -o none
az network vnet update --resource-group $rg --name Az-spk1-vnet --address-prefixes 10.0.1.0/24 172.16.0.0/24 -o none
# Create a new subnet in OnPrem-vnet
az network vnet subnet create --resource-group $rg --vnet-name OnPrem-vnet --name subnext --address-prefixes 172.16.0.0/24 --output none
# Create a new subnet in Az-spk1-vnet
az network vnet subnet create --resource-group $rg --vnet-name Az-spk1-vnet --name subnext --address-prefixes 172.16.0.0/24 --output none

# Azure Bastion
# Create Azure Bastion subnet in Az-Hub1-vnet
az network vnet subnet create --resource-group $rg --vnet-name Az-Hub1-vnet --name AzureBastionSubnet --address-prefixes 10.0.0.192/26 --output none
# Create Public IP for Azure Bastion
az network public-ip create --resource-group $rg --name Az-Hub1-bastion-pip --sku Standard --location $location --output none
# Deploy Azure Bastion on Az-Hub1-vnet
az network bastion create --name Az-Hub1-bastion --resource-group $rg --vnet-name Az-Hub1-vnet --public-ip-address Az-Hub1-bastion-pip --sku basic --location $location --output none --no-wait
# Create Azure bastion subnet in OnPrem-vnet
az network vnet subnet create --resource-group $rg --vnet-name OnPrem-vnet --name AzureBastionSubnet --address-prefixes 192.168.100.192/26 --output none
# Create Public IP for Azure Bastion
az network public-ip create --resource-group $rg --name OnPrem-bastion-pip --sku Standard --location $location --output none
# Deploy Azure Bastion on OnPrem-vnet
az network bastion create --name OnPrem-bastion --resource-group $rg --vnet-name OnPrem-vnet --public-ip-address OnPrem-bastion-pip --sku basic --location $location --output none --no-wait 

# Deploy two Windows Server 2022 VMs to OnPrem-vnet using small disk size using cli usind az vm create
az vm create --resource-group $rg --name onprem-winvm1 --image MicrosoftWindowsServer:WindowsServer:2022-datacenter-smalldisk-g2:latest --size Standard_D2s_v3 --admin-username $username --admin-password $password --vnet-name OnPrem-vnet --subnet subnet1 --public-ip-address "" --output none --no-wait
az vm create --resource-group $rg --name onprem-wingw --image MicrosoftWindowsServer:WindowsServer:2022-datacenter-smalldisk-g2:latest --size Standard_D2s_v3 --admin-username $username --admin-password $password --vnet-name OnPrem-vnet --subnet subnet1 --public-ip-address "" --output none --no-wait

# Deploy Windows Server 2022 VM to Az-spk1-vnet using small disk size using cli usind az vm create
az vm create --resource-group $rg --name az-spk1-wingw --image MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest --size Standard_D2s_v3 --admin-username $username --admin-password $password --vnet-name Az-spk1-vnet --subnet subnet1 --public-ip-address "" --output none --no-wait

# Deploy Ubuntu VM to subnet subnext in OnPrem-vnet using cli usind az vm create and static IP address 172.16.0.100
az vm create --resource-group $rg --name onprem-extvm --image UbuntuLTS --size Standard_B1ms --admin-username $username --admin-password $password --vnet-name OnPrem-vnet --subnet subnext --public-ip-address "" --private-ip-address 172.16.0.100 --nsg "" --output none --no-wait 
# Deploy Ubuntu VM to subnet subnext in Az-spk1-vnet using cli usind az vm create and static IP 172.16.0.10
az vm create --resource-group $rg --name az-spk1-extvm --image UbuntuLTS --size Standard_B1ms --admin-username $username --admin-password $password --vnet-name Az-spk1-vnet --subnet subnext --public-ip-address "" --private-ip-address  172.16.0.10 --nsg "" --output none --no-wait


# List all VMs from RG and their private IP addresses
az vm list-ip-addresses --resource-group $rg --query "[].{Name:virtualMachine.name,PrivateIP:virtualMachine.network.privateIpAddresses[0]}" -o table

# Create a network interface card for onprem-wingw VM on subnet subnext with static IP
az network nic create --resource-group $rg --name onprem-wingw-nic2 --vnet-name OnPrem-vnet --subnet subnext --private-ip-address 172.16.0.4 --output none

# Stop and deallocate onprem-wingw VM
az vm deallocate --resource-group $rg --name onprem-wingw --output none
az vm nic add --nics onprem-wingw-nic2 --resource-group $rg --vm-name onprem-wingw --output none
az vm start --resource-group $rg --name onprem-wingw --output none --no-wait

# Create a network interface card for az-spk1-wingw on subnet subnext with static IP
az network nic create --resource-group $rg --name az-spk1-wingw-nic2 --vnet-name Az-spk1-vnet --subnet subnext --private-ip-address 172.16.0.5 --output none

# Stop and deallocate az-spk1-wingw VM
az vm deallocate --resource-group $rg --name az-spk1-wingw --output none
az vm nic add --nics az-spk1-wingw-nic2 --resource-group $rg --vm-name az-spk1-wingw --output none
az vm start --resource-group $rg --name az-spk1-wingw --output none --no-wait

# Run a powershell commmand on onprem-wingw VM
Install-WindowsFeature -Name Hyper-V -IncludeManagementTools -Restart
# Run a powershell commmand on az-spk1-wingw VM	
Install-WindowsFeature -Name Hyper-V -IncludeManagementTools -Restart	

# Run power shell command get network adapter names and ip addresses
Get-NetAdapter | Select-Object Name, InterfaceDescription, Status, MacAddress, IPv4Address, IPv6Address

# Run powershell command to allow ICMPv4 and ICMPv6 traffic for all Windows VMs
winvm=$(az vm list --resource-group $rg --query "[?storageProfile.osDisk.osType=='Windows'].{Name:name}" -o tsv)
for vm in $winvm; 
do 
 az vm run-command invoke --resource-group $rg --name $vm --command-id RunPowerShellScript --scripts "Set-NetFirewallRule -DisplayName 'File and Printer Sharing (Echo Request - ICMPv4-In)' -Enabled True" --output none; 
done


New-VMSwitch -Name "External" -AllowManagementOS $true -NetAdapterName "Ethernet"
New-VMSwitch -Name "Extended" -AllowManagementOS $true -NetAdapterName "Ethernet 2"

# Install Admin Center on onprem-winvm 
https://learn.microsoft.com/en-us/windows-server/manage/windows-admin-center/overview

# **** Danger Zone **** 
# Clean up by deleting resource group
az group delete --name $rg --yes --no-wait



